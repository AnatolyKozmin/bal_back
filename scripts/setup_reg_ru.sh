#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–º–µ–Ω–∞ REG.RU
echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Bal Bot –Ω–∞ –¥–æ–º–µ–Ω–µ REG.RU"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ root
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å –ø—Ä–∞–≤–∞–º–∏ root: sudo ./scripts/setup_reg_ru.sh"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º –¥–æ–º–µ–Ω –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: mydomain.ru): " DOMAIN

if [ -z "$DOMAIN" ]; then
    echo "‚ùå –î–æ–º–µ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω"
    exit 1
fi

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –¥–æ–º–µ–Ω–∞: $DOMAIN"

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
apt update && apt upgrade -y

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
if ! command -v docker &> /dev/null; then
    echo "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    usermod -aG docker $USER
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
    curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Nginx
if ! command -v nginx &> /dev/null; then
    echo "üåê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nginx..."
    apt install nginx -y
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Certbot
if ! command -v certbot &> /dev/null; then
    echo "üîí –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Certbot..."
    apt install certbot python3-certbot-nginx -y
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p /var/www/bal-bot/{frontend,backend,logs}

# –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç
echo "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."
cp -r . /var/www/bal-bot/backend/
cd /var/www/bal-bot/backend

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
if [ ! -f .env ]; then
    echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    cp env.docker .env
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ–º–µ–Ω –≤ .env
    sed -i "s/yourdomain.ru/$DOMAIN/g" .env
    sed -i "s/WEBHOOK_URL=https:\/\/yourdomain.ru\/api/WEBHOOK_URL=https:\/\/$DOMAIN\/api/" .env
    sed -i "s/MINI_APP_URL=https:\/\/yourdomain.ru/MINI_APP_URL=https:\/\/$DOMAIN/" .env
    
    echo "üìù –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è –¥–æ–º–µ–Ω–∞: $DOMAIN"
    echo "üîß –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª: nano /var/www/bal-bot/backend/.env"
fi

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx
echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
cat > /etc/nginx/sites-available/bal-bot << EOF
server {
    listen 80;
    server_name $DOMAIN www.$DOMAIN;
    
    # –§—Ä–æ–Ω—Ç–µ–Ω–¥
    location / {
        root /var/www/bal-bot/frontend;
        index index.html;
        try_files \$uri \$uri/ /index.html;
    }
    
    # API
    location /api/ {
        proxy_pass http://localhost:8000/;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
    
    # Telegram webhook
    location /telegram/ {
        proxy_pass http://localhost:8000/telegram/;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–∞–π—Ç
ln -sf /etc/nginx/sites-available/bal-bot /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
nginx -t
if [ $? -eq 0 ]; then
    systemctl reload nginx
    echo "‚úÖ Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–µ–∫–µ–Ω–¥
echo "üê≥ –ó–∞–ø—É—Å–∫ –±–µ–∫–µ–Ω–¥–∞..."
docker-compose -f docker-compose.vps.yml build
docker-compose -f docker-compose.vps.yml up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞..."
sleep 15

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
docker-compose -f docker-compose.vps.yml exec app alembic upgrade head

# –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
echo "üì± –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
cat > /var/www/bal-bot/frontend/index.html << EOF
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bal Bot - –ê–Ω–∫–µ—Ç–∞ –¥–ª—è –±–∏–ª–µ—Ç–æ–≤</title>
    <style>
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            margin: 0; 
            padding: 20px; 
            background: #f5f5f5; 
        }
        .container { 
            max-width: 400px; 
            margin: 0 auto; 
            background: white; 
            padding: 20px; 
            border-radius: 10px; 
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 { 
            text-align: center; 
            color: #007AFF; 
            margin-bottom: 20px;
        }
        .loading { 
            text-align: center; 
            color: #666; 
            font-size: 16px;
        }
        .status {
            background: #e8f5e8;
            border: 1px solid #4caf50;
            color: #2e7d32;
            padding: 10px;
            border-radius: 5px;
            margin-top: 20px;
        }
        .info {
            background: #e3f2fd;
            border: 1px solid #2196f3;
            color: #1565c0;
            padding: 10px;
            border-radius: 5px;
            margin-top: 10px;
            font-size: 14px;
        }
    </style>
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
</head>
<body>
    <div class="container">
        <h1>üé´ Bal Bot</h1>
        <div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...</div>
        <div class="status" id="status" style="display: none;">
            ‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!
        </div>
        <div class="info" id="info" style="display: none;">
            üåê –î–æ–º–µ–Ω: $DOMAIN<br>
            üîß API: $DOMAIN/api<br>
            üì± Telegram Mini App –∞–∫—Ç–∏–≤–µ–Ω
        </div>
    </div>
    <script>
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
        const tg = window.Telegram.WebApp;
        tg.ready();
        tg.expand();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
        setTimeout(() => {
            document.querySelector('.loading').style.display = 'none';
            document.getElementById('status').style.display = 'block';
            document.getElementById('info').style.display = 'block';
        }, 1000);
    </script>
</body>
</html>
EOF

echo ""
echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. üîß –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS –≤ REG.RU:"
echo "   - A-–∑–∞–ø–∏—Å—å: @ -> IP_–í–ê–®–ï–ô_–í–ú"
echo "   - A-–∑–∞–ø–∏—Å—å: www -> IP_–í–ê–®–ï–ô_–í–ú"
echo ""
echo "2. üìù –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
echo "   nano /var/www/bal-bot/backend/.env"
echo ""
echo "3. üîí –ü–æ–ª—É—á–∏—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç:"
echo "   certbot --nginx -d $DOMAIN -d www.$DOMAIN"
echo ""
echo "4. ü§ñ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ webhook:"
echo "   curl 'https://$DOMAIN/telegram/set-webhook'"
echo ""
echo "üåê –í–∞—à —Å–∞–π—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://$DOMAIN"
echo "üîß API –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://$DOMAIN/api"
echo ""
echo "‚è≥ DNS –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–æ–≥—É—Ç –∑–∞–Ω—è—Ç—å –¥–æ 48 —á–∞—Å–æ–≤"
